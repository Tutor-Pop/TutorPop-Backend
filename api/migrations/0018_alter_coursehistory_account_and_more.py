# Generated by Django 4.1.1 on 2022-09-26 10:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0017_alter_openrequests_account_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='coursehistory',
            name='account',
            field=models.ForeignKey(db_column='account_id', on_delete=django.db.models.deletion.CASCADE, to='api.account'),
        ),
        migrations.RenameField(
            model_name='coursehistory',
            old_name='account',
            new_name='account_id',
        ),
        migrations.AlterField(
            model_name='coursehistory',
            name='course',
            field=models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='api.courses'),
        ),
        migrations.RenameField(
            model_name='coursehistory',
            old_name='course',
            new_name='course_id',
        ),
        migrations.AlterField(
            model_name='courses',
            name='owner',
            field=models.ForeignKey(db_column='owner_id', on_delete=django.db.models.deletion.CASCADE, to='api.account'),
        ),
        migrations.RenameField(
            model_name='courses',
            old_name='owner',
            new_name='owner_id',
        ),
        migrations.AlterField(
            model_name='courses',
            name='school',
            field=models.ForeignKey(db_column='school_id', on_delete=django.db.models.deletion.CASCADE, to='api.school'),
        ),
        migrations.RenameField(
            model_name='courses',
            old_name='school',
            new_name='school_id',
        ),
        migrations.AlterField(
            model_name='courseteacher',
            name='account',
            field=models.ForeignKey(db_column='account_id', on_delete=django.db.models.deletion.CASCADE, to='api.account'),
        ),
        migrations.RenameField(
            model_name='courseteacher',
            old_name='account',
            new_name='account_id',
        ),
        migrations.AlterField(
            model_name='courseteacher',
            name='course',
            field=models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='api.courses'),
        ),
        migrations.RenameField(
            model_name='courseteacher',
            old_name='course',
            new_name='course_id',
        ),
        migrations.AlterField(
            model_name='favcourse',
            name='account',
            field=models.ForeignKey(db_column='account_id', on_delete=django.db.models.deletion.CASCADE, to='api.account'),
        ),
        migrations.RenameField(
            model_name='favcourse',
            old_name='account',
            new_name='account_id',
        ),
        migrations.AlterField(
            model_name='favcourse',
            name='course',
            field=models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='api.courses'),
        ),
        migrations.RenameField(
            model_name='favcourse',
            old_name='course',
            new_name='course_id',
        ),
        migrations.AlterField(
            model_name='openrequests',
            name='school',
            field=models.ForeignKey(db_column='school_id', on_delete=django.db.models.deletion.CASCADE, to='api.school'),
        ),
        migrations.RenameField(
            model_name='openrequests',
            old_name='school',
            new_name='school_id',
        ),
        migrations.AlterField(
            model_name='passwordhistory',
            name='account',
            field=models.ForeignKey(db_column='account_id', on_delete=django.db.models.deletion.CASCADE, to='api.account'),
        ),
        migrations.RenameField(
            model_name='passwordhistory',
            old_name='account',
            new_name='account_id',
        ),
        migrations.AlterField(
            model_name='reservation',
            name='account',
            field=models.ForeignKey(db_column='account_id', on_delete=django.db.models.deletion.CASCADE, to='api.account'),
        ),
        migrations.RenameField(
            model_name='reservation',
            old_name='account',
            new_name='account_id',
        ),
        migrations.AlterField(
            model_name='reservation',
            name='course',
            field=models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='api.courses'),
        ),
        migrations.RenameField(
            model_name='reservation',
            old_name='course',
            new_name='course_id',
        ),
        migrations.AlterField(
            model_name='roomusage',
            name='course',
            field=models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='api.courses'),
        ),
        migrations.RenameField(
            model_name='roomusage',
            old_name='course',
            new_name='course_id',
        ),
        migrations.AlterField(
            model_name='roomusage',
            name='room',
            field=models.ForeignKey(db_column='room_id', on_delete=django.db.models.deletion.CASCADE, to='api.schoolrooms'),
        ),
        migrations.RenameField(
            model_name='roomusage',
            old_name='room',
            new_name='room_id',
        ),
        migrations.AlterField(
            model_name='school',
            name='owner',
            field=models.ForeignKey(db_column='owner_id', default=1, on_delete=django.db.models.deletion.CASCADE, to='api.account'),
        ),
        migrations.RenameField(
            model_name='school',
            old_name='owner',
            new_name='owner_id',
        ),
        migrations.AlterField(
            model_name='schoolrooms',
            name='school',
            field=models.ForeignKey(db_column='school_id', on_delete=django.db.models.deletion.CASCADE, to='api.school'),
        ),
        migrations.RenameField(
            model_name='schoolrooms',
            old_name='school',
            new_name='school_id',
        ),
        migrations.AlterField(
            model_name='schoolwithtype',
            name='type',
            field=models.ForeignKey(db_column='type_id', on_delete=django.db.models.deletion.CASCADE, to='api.schooltypes'),
        ),
        migrations.RenameField(
            model_name='schoolwithtype',
            old_name='type',
            new_name='type_id',
        ),
        migrations.AlterField(
            model_name='studytime',
            name='course',
            field=models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='api.courses'),
        ),
        migrations.RenameField(
            model_name='studytime',
            old_name='course',
            new_name='course_id',
        ),
        migrations.AlterField(
            model_name='studytimerecords',
            name='course',
            field=models.ForeignKey(db_column='course_id', on_delete=django.db.models.deletion.CASCADE, to='api.courses'),
        ),
        migrations.RenameField(
            model_name='studytimerecords',
            old_name='course',
            new_name='course_id',
        ),
        migrations.AlterField(
            model_name='teacher',
            name='account',
            field=models.ForeignKey(db_column='account_id', on_delete=django.db.models.deletion.CASCADE, to='api.account'),
        ),
        migrations.RenameField(
            model_name='teacher',
            old_name='account',
            new_name='account_id',
        ),
        migrations.AlterField(
            model_name='teacher',
            name='school',
            field=models.ForeignKey(db_column='school_id', on_delete=django.db.models.deletion.CASCADE, to='api.school'),
        ),
        migrations.RenameField(
            model_name='teacher',
            old_name='school',
            new_name='school_id',
        ),
        migrations.AlterUniqueTogether(
            name='courseteacher',
            unique_together={('course_id', 'account_id')},
        ),
    ]
